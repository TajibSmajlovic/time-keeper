{"version":3,"sources":["components/TeamPage/TeamCard/TeamCard.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Navigation.module.css","components/TeamPage/TeamPage.module.css","components/AboutPage/AboutPage.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/ToggleButton/ToggleButton.module.css","assets/profilePictures/Tajib Smajlović.jpg","assets/profilePictures/Ajdin Zorlak.jpg","assets/profilePictures/Merima Kovačević.jpg","assets/profilePictures/Armin Odobašić.jpg","assets/profilePictures/Amila Šikalo.jpg","assets/profilePictures/Nađa Šišić.jpg","assets/servicesSVGIcons/linkedin.svg","assets/servicesSVGIcons/github-sign.svg","assets/servicesSVGIcons/facebook.svg","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/ToggleButton/ToggleButton.js","components/Navigation/Navigation.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/AboutPage/AboutPage.js","data/profilePictures.js","components/TeamPage/TeamCard/TeamCard.js","components/TeamPage/TeamPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","className","classes","Logo","navigationItem","props","onClick","click","NavigationItem","href","link","children","navigationItems","NavigationItems","clicked","toggleButton","ToggleButton","navigation","Navigation","ToggleButtonClicked","DesktopOnly","Button","variant","color","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Fragment","join","closed","Layout","state","showSideDrawer","screenWidth","document","body","offsetWidth","updateWindowDimensions","setState","window","innerWidth","sideDrawerClosedHandler","drawerToggleClicked","prevState","this","addEventListener","removeEventListener","React","Component","aboutPage","id","passedId","Background","HeadText","picture","picture1","picture2","picture3","picture4","picture5","picture6","teamCard","TeamCard","src","alt","name","Img","Name","Role","role","About","about","ScIcons","lnLink","target","Link","LnIcon","Icon","gitLink","GitIcon","fbLink","FbIcon","teamPage","TeamPage","TeamPageSlogan","style","margin","listStyleType","TeamPageList","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","arrows","teamData","map","d","i","key","pictures","socialMedia","ln","git","fb","App","AboutPage","height","backgroundColor","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24bf7c75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeamCard\":\"TeamCard_TeamCard__1CJHC\",\"Img\":\"TeamCard_Img__Aejvm\",\"Name\":\"TeamCard_Name__1GVS6\",\"Role\":\"TeamCard_Role__3KNLq\",\"About\":\"TeamCard_About__36Zo9\",\"ScIcons\":\"TeamCard_ScIcons__3iU2P\",\"Icon\":\"TeamCard_Icon__1NPKB\",\"Link\":\"TeamCard_Link__1X0IE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3H1YL\",\"Button\":\"SideDrawer_Button__llN3v\",\"Open\":\"SideDrawer_Open__M9EtV\",\"Close\":\"SideDrawer_Close__3CBR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__2qqy6\",\"Button\":\"Navigation_Button__1cyfh\",\"DesktopOnly\":\"Navigation_DesktopOnly__3D4-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeamPage\":\"TeamPage_TeamPage__NUaIk\",\"TeamPageSlogan\":\"TeamPage_TeamPageSlogan__2HdMx\",\"TeamPageList\":\"TeamPage_TeamPageList__YVUDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"AboutPage_Background__2bEK4\",\"HeadText\":\"AboutPage_HeadText__1jqBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2G8DW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3YYkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2Lnds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleButton\":\"ToggleButton_ToggleButton__3S6U7\"};","module.exports = __webpack_public_path__ + \"static/media/Tajib Smajlović.89e13aef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ajdin Zorlak.0482db8f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Merima Kovačević.eec97fad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Armin Odobašić.ea012e95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Amila Šikalo.569af603.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nađa Šišić.01b548b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.4b475fb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-sign.8f8edc5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.c0cd1382.svg\";","import React from \"react\";\r\n\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst logo = () => <h1 className={classes.Logo}>LOGO</h1>;\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./NavigationItem.module.css\";\r\n\r\nconst navigationItem = props => (\r\n    <li onClick={props.click} className={classes.NavigationItem}>\r\n        <a href={props.link}>{props.children}</a>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = props => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem click={props.clicked} link=\"#about\">\r\n            About\r\n        </NavigationItem>\r\n        <NavigationItem click={props.clicked} link=\"#services\">\r\n            Services\r\n        </NavigationItem>\r\n        <NavigationItem click={props.clicked} link=\"#team\">\r\n            Team\r\n        </NavigationItem>\r\n        <NavigationItem click={props.clicked} link=\"#contact\">\r\n            Contact\r\n        </NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./ToggleButton.module.css\";\r\n\r\nconst toggleButton = props => (\r\n    <div onClick={props.clicked} className={classes.ToggleButton}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\nexport default toggleButton;\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport classes from \"./Navigation.module.css\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\r\nimport ToggleButton from \"./ToggleButton/ToggleButton\";\r\n\r\nconst navigation = props => (\r\n    <header className={classes.Navigation}>\r\n        <Logo />\r\n        <ToggleButton clicked={props.ToggleButtonClicked} />\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.Button}>\r\n            LOGIN\r\n        </Button>\r\n    </header>\r\n);\r\n\r\nexport default navigation;\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\n\r\nconst sideDrawer = props => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <nav>\r\n                    <NavigationItems clicked={props.closed} />\r\n                </nav>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.Button}>\r\n                    LOGIN\r\n                </Button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React from \"react\";\r\n\r\nimport Navigation from \"../../components/Navigation/Navigation\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        showSideDrawer: false,\r\n        screenWidth: document.body.offsetWidth\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ screenWidth: window.innerWidth });\r\n    };\r\n\r\n    sideDrawerClosedHandler = () => this.setState({ showSideDrawer: false });\r\n\r\n    drawerToggleClicked = () =>\r\n        this.setState(prevState => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navigation ToggleButtonClicked={this.drawerToggleClicked} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}\r\n                />\r\n                <main>{this.props.children}</main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./AboutPage.module.css\";\r\n\r\nconst aboutPage = props => (\r\n    <div id={props.passedId} className={classes.Background}>\r\n        <h1 className={classes.HeadText}>\r\n            Time tracking. <br />\r\n            Reports. <br />\r\n            Made easy.\r\n        </h1>\r\n    </div>\r\n);\r\n\r\nexport default aboutPage;\r\n","import picture1 from \"../assets/profilePictures/Tajib Smajlović.jpg\";\r\nimport picture2 from \"../assets/profilePictures/Ajdin Zorlak.jpg\";\r\nimport picture3 from \"../assets/profilePictures/Merima Kovačević.jpg\";\r\nimport picture4 from \"../assets/profilePictures/Armin Odobašić.jpg\";\r\nimport picture5 from \"../assets/profilePictures/Amila Šikalo.jpg\";\r\nimport picture6 from \"../assets/profilePictures/Nađa Šišić.jpg\";\r\n\r\nconst picture = [picture1, picture2, picture3, picture4, picture5, picture6];\r\n\r\nexport default picture;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./TeamCard.module.css\";\r\nimport \"./TeamCard.module.css\";\r\n\r\nimport LnIcon from \"../../../assets/servicesSVGIcons/linkedin.svg\";\r\nimport GitIcon from \"../../../assets/servicesSVGIcons/github-sign.svg\";\r\nimport FbIcon from \"../../../assets/servicesSVGIcons/facebook.svg\";\r\n\r\nconst teamCard = props => (\r\n    <div className={classes.TeamCard}>\r\n        <img src={props.picture} alt={props.name} className={classes.Img} />\r\n        <h2 className={classes.Name}>{props.name}</h2>\r\n        <p className={classes.Role}>{props.role}</p>\r\n\r\n        <p className={classes.About}>{props.about}</p>\r\n\r\n        <hr />\r\n\r\n        <div className={classes.ScIcons}>\r\n            <a href={props.lnLink} target=\"_blank\" className={props.Link}>\r\n                <img src={LnIcon} alt=\"ln\" className={classes.Icon} />\r\n            </a>\r\n            <a href={props.gitLink} target=\"_blank\">\r\n                <img src={GitIcon} alt=\"git\" className={classes.Icon} />\r\n            </a>\r\n            <a href={props.fbLink} target=\"_blank\">\r\n                <img src={FbIcon} alt=\"fb\" className={classes.Icon} />\r\n            </a>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default teamCard;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport classes from \"./TeamPage.module.css\";\r\nimport pictures from \"../../data/profilePictures\";\r\nimport teamData from \"../../data/teamMembers.json\";\r\nimport TeamCard from \"./TeamCard/TeamCard\";\r\n\r\nconst teamPage = props => {\r\n    let settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1,\r\n                    dots: true,\r\n                    arrows: true\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1,\r\n                    dots: true,\r\n                    arrows: true\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div id={props.passedId} className={classes.TeamPage}>\r\n            <h1>Team Page</h1>\r\n            <p className={classes.TeamPageSlogan}>\r\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Non, quo doloribus\r\n                delectus dolore expedita, repellendus testtes as\r\n            </p>\r\n            <ul\r\n                style={{ margin: \"0 2rem\", listStyleType: \"none\" }}\r\n                className={classes.TeamPageList}\r\n            >\r\n                <Slider {...settings}>\r\n                    {teamData.map((d, i) => (\r\n                        <TeamCard\r\n                            key={i}\r\n                            picture={pictures[i]}\r\n                            name={d.name}\r\n                            role={d.role}\r\n                            about={d.about}\r\n                            lnLink={d.socialMedia.ln}\r\n                            gitLink={d.socialMedia.git}\r\n                            fbLink={d.socialMedia.fb}\r\n                        />\r\n                    ))}\r\n                </Slider>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default teamPage;\r\n","import React from \"react\";\r\n\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport AboutPage from \"./components/AboutPage/AboutPage\";\r\nimport TeamPage from \"./components/TeamPage/TeamPage\";\r\n\r\nclass App extends React.Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <AboutPage passedId={\"about\"} />\r\n                <TeamPage passedId={\"team\"} />\r\n\r\n                <div id=\"services\" style={{ height: \"100vh\", backgroundColor: \"green\" }} />\r\n\r\n                <div id=\"team\" style={{ height: \"100vh\", backgroundColor: \"blue\" }} />\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}